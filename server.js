const express = require('express');
const { run, warmup } = require('./index.js');
const app = express();

// „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ
app.get('/health', (req, res) => {
  res.send('OK');
});

// „Çµ„Éº„Éì„ÇπËµ∑ÂãïÊôÇ„Å´„Å†„ÅëÂÆüË°å„Åô„Çã warmup
(async () => {
  try {
    console.log('‚ú® Warmup: launching browser to avoid cold start...');
    await warmup();
    console.log('‚ú® Warmup completed');
  } catch (e) {
    console.error('‚ö†Ô∏è Warmup failed (ignored):', e);
  }
})();

// „Çπ„ÇØ„É™„Éó„ÉàÂÆüË°å„Éà„É™„Ç¨„ÉºÔºàCRON „Åã„ÇâÂëº„Å≥Âá∫„ÅóÔºâ
app.get('/run', async (req, res) => {
  try {
    await run();            // LINE ÈÄöÁü•„ÇíÂê´„ÇÄ
    res.sendStatus(204);
  } catch (err) {
    console.error('üí• /run error:', err);
    res.sendStatus(500);
  }
});

// „Éô„É≥„ÉÅ„Éû„Éº„ÇØÁî®„Ç®„É≥„Éâ„Éù„Ç§„É≥„ÉàÔºà„ÉÜ„Çπ„ÉàÁöÑ„Å´‰∏ÄÂ∫¶„Å†„ÅëÂÆüË°åÔºâ
app.get('/run-once', async (req, res) => {
  const start = Date.now();
  try {
    await run();
    const elapsed = ((Date.now() - start) / 1000).toFixed(2);
    console.log(`‚è± run-once: ${elapsed}s`);
    res.send(`OK in ${elapsed}s`);
  } catch (err) {
    console.error('üí• /run-once error:', err);
    res.status(500).send(err.message);
  }
});

// „Éù„Éº„Éà„Éê„Ç§„É≥„Éâ
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`Server listening on port ${port}`);
});
```Ó®Å0Ó®Ç
